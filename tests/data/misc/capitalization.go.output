// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package test
import "encoding/json"

type Capitalization struct {
	// HtMl corresponds to the JSON schema field "html".
	HtMl *string `json:"html,omitempty"`

	// HtMlSomethingElse corresponds to the JSON schema field "htmlSomethingElse".
	HtMlSomethingElse *string `json:"htmlSomethingElse,omitempty"`

	// HtMl_2 corresponds to the JSON schema field "html__".
	HtMl_2 *string `json:"html__,omitempty"`

	// HtMlSomething corresponds to the JSON schema field "html_something".
	HtMlSomething *string `json:"html_something,omitempty"`

	// ID corresponds to the JSON schema field "id".
	ID *string `json:"id,omitempty"`

	// IDSomethingElse corresponds to the JSON schema field "idSomethingElse".
	IDSomethingElse *string `json:"idSomethingElse,omitempty"`

	// ID_2 corresponds to the JSON schema field "id__".
	ID_2 *string `json:"id__,omitempty"`

	// IDSomething corresponds to the JSON schema field "id_something".
	IDSomething *string `json:"id_something,omitempty"`

	// URL corresponds to the JSON schema field "url".
	URL *string `json:"url,omitempty"`

	// URLSomethingElse corresponds to the JSON schema field "urlSomethingElse".
	URLSomethingElse *string `json:"urlSomethingElse,omitempty"`

	// URL_2 corresponds to the JSON schema field "url__".
	URL_2 *string `json:"url__,omitempty"`

	// URLSomething corresponds to the JSON schema field "url_something".
	URLSomething *string `json:"url_something,omitempty"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Capitalization) UnmarshalJSON(b []byte) error {
	var v struct {
	}
	if err := json.Unmarshal(b, &v); err != nil { return err }
	type plain Capitalization
	var p plain
	if err := json.Unmarshal(b, &p); err != nil { return err }
	*j = Capitalization(p)
	return nil
}

