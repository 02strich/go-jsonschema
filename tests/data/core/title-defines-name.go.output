// Code generated by github.com/02strich/go-jsonschema, DO NOT EDIT.

package test

import "fmt"
import "encoding/json"

type SummaryEntry struct {
	// Count corresponds to the JSON schema field "count".
	Count int `json:"count" yaml:"count"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *SummaryEntry) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["count"]; !ok || v == nil {
		return fmt.Errorf("field count in SummaryEntry: required")
	}
	type Plain SummaryEntry
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = SummaryEntry(plain)
	return nil
}

type TitleDefinesName struct {
	// Data corresponds to the JSON schema field "data".
	Data []SummaryEntry `json:"data,omitempty" yaml:"data,omitempty"`
}
